<?php
class MP_Comment
{
////	comment subscription form	////

	public static function comment_form($post_id) 
	{
		global $wpdb;
		$checked = '';

		$defaults = MP_Widget::form_defaults();

		$email = MailPress::get_wp_user_email();

		if (MailPress::is_email($email))
		{
			MailPress::require_class('Users');
			$i = MP_Users::get_id_by_email($email);
			if ($i)
			{
				$x = $wpdb->get_var("SELECT meta_id FROM $wpdb->postmeta WHERE post_id = $post_id and meta_key = '_MailPress_subscribe_to_comments_' AND meta_value = '$i';");
				if ($x) $checked = "checked='checked'";
			}
		}
?>
<!-- start of code generated by MailPress -->
<div class='MailPressCommentform' style='clear:both;'>
	<input class='MailPressCommentformCheckbox' name='MailPress[subscribe_to_comments]' type='checkbox' <?php echo $checked; ?> style='margin:0;padding:0;width:auto;' />
	<span><?php echo $defaults['txtsubcomment']; ?></span>
</div>
<!-- end of code generated by MailPress -->
<?php
	}

////	processing comment subscription form	////

	public static function comment_post($id) 
	{
		global $wpdb, $comment;

		$comment 	= $wpdb->get_row("SELECT * FROM $wpdb->comments WHERE comment_ID = $id LIMIT 1");
		$post_id 	= $comment->comment_post_ID;

		$email 	= MailPress::get_wp_user_email();
		$name 	= $comment->comment_author;

		if (MailPress::is_email($email))
		{
			MailPress::require_class('Users');
			$i = MP_Users::get_id_by_email($email);
			if ($i)
			{
				$x = $wpdb->get_var("SELECT meta_id FROM $wpdb->postmeta WHERE post_id = $post_id and meta_key = '_MailPress_subscribe_to_comments_' AND meta_value = '$i';");
				if ($x)
				{
					if (!isset($_POST['MailPress']['subscribe_to_comments'])) 
					{
						delete_post_meta($post_id, '_MailPress_subscribe_to_comments_', $i);
						MailPress::update_stats('c', $post_id, -1);
					}
				}
				else
				{
					if (isset($_POST['MailPress']['subscribe_to_comments'])) 
					{
						add_post_meta($post_id, '_MailPress_subscribe_to_comments_', $i);
						MailPress::update_stats('c', $post_id, 1);
					}
				}
			}
			else
			{
				if (isset($_POST['MailPress']['subscribe_to_comments']))
				{
					if (MP_Users::insert($email, $name))
					{
						$i = MP_Users::get_id_by_email($email);

						add_post_meta($post_id, '_MailPress_subscribe_to_comments_', $i);
						MailPress::update_stats('c', $post_id, 1);
						do_action('MailPress_new commenter', $i, 'MailPress_new commenter');
					}
				}
			}
		}
		if ('1' == $comment->comment_approved) self::approve_comment($id);
	}

////	comment functions 	////

	public static function update_checklist($mp_user_id)
	{
		$comment_subs = self::get_comment_subs($mp_user_id);
		foreach ($comment_subs as $comment_sub)
		{
			if (isset($_POST['keep_comment_sub'][$comment_sub->meta_id])) continue;
			delete_post_meta($comment_sub->post_id, '_MailPress_subscribe_to_comments_', $mp_user_id);
			MailPress::update_stats('c', $comment_sub->post_id, -1);
		}
	}

	public static function get_checklist($mp_user_id)
	{
		$check_comments = false;

		$comment_subs = self::get_comment_subs($mp_user_id);
		foreach ($comment_subs as $comment_sub)
		{
			$check_comments .= "<input type='checkbox' name='keep_comment_sub[" . $comment_sub->meta_id . "]' checked='checked' />&nbsp;" . apply_filters('the_title', $comment_sub->post_title ) . "<br />\n";
		}
		return $check_comments;
	}

	public static function get_comment_subs($id) 
	{
		global $wpdb;

		$query = "SELECT a.meta_id, a.post_id, b.post_title FROM $wpdb->postmeta a, $wpdb->posts b WHERE a.meta_key = '_MailPress_subscribe_to_comments_' AND a.meta_value = '$id' AND a.post_id = b.ID;";
		return $wpdb->get_results( $query );
	}

////	send comment mail functions 	////

	public static function approve_comment($id) 
	{
		global $wpdb, $comment;

		$comment	= $wpdb->get_row("SELECT * FROM $wpdb->comments WHERE comment_ID = $id LIMIT 1");

        if (!$comment) return false;
        
		if ('1' != $comment->comment_approved) return true;

		$post = &get_post($comment->comment_post_ID);

		$mail = new stdClass();

		$mail->Template	= 'comments';

		$mail->recipients_query = "SELECT c.email, c.name, c.confkey from $wpdb->comments a, $wpdb->postmeta b, $wpdb->mp_users c WHERE a.comment_ID = $id AND a.comment_post_ID  = b.post_id AND b.meta_value = c.id AND b.meta_key = '_MailPress_subscribe_to_comments_' AND a.comment_author_email <> c.email" ;

		$mail->the_title	= apply_filters('the_title', $post->post_title );

		$mail->subject	= sprintf( __('[%1$s] New Comment (%2$s)', 'MailPress'), get_bloginfo('name'), $mail->the_title);

		$mail->content	= apply_filters('comment_text', get_comment_text() );

		$mail->p = new stdClass();
		$mail->p->id	= $comment->comment_post_ID;
		$mail->c = new stdClass();
		$mail->c->id   	= $id;

		return MailPress::mail($mail);
	}
}
?>